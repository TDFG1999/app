/*
Вывод информации и работа с консолью
    Вывод информации в body. Необходим объект document.write(js говорит привет!) редко применяется.
    console. - вывод информации в териминал. Можно использовать с log или info (Одно и тоже)
    console.error("Ошибка"); - будет выподится в формате ошибки.
    console.warn("Предупреждение"); - будет выподится в формате предупредждения.
    Если при изменении js ничего не происходит необходимо выполнять сброс кеша.
    var - варибл с английского переменная. Нужна для создания переменной.
    Если пропистаь const то значение будет постоянным.
*/


// Название переменной num. Не забывать ставить ;
// var num; 
// num = 31;
// var isHasHouse = true;

// Структура написнаия условного оператора if/else
//if(num == 31 || isHasHouse == true){ //Если нужно указать несколько значений, то разделяем || (или), && (и)
//     console.log("Error");
// }
// else if(num < 31){
//     console.log("ne Error");
// }
// else if(num >= 31){
//     console.log("na Error");
// }
// else{
//     console.log("ok");
// }

//var stroke = "word";
// switch(stroke){ //swich/case проверяем переменную на внутренне значение. Используется для проверки переменных на множество разных значений.
//     case "4": 
//         console.log("Переменная с значением 4");
//     break;
//     case "45": 
//         console.log("Переменная с значением 45");
//     break;
//     case "word": 
//         console.log("Переменная с значением word");
//     break;
//     default:
//       console.log("Default") //если ничего не подошло  
// }



//МАССИВЫ
// //Массивы очень схожи с пемеренными, но мы может запистаь не 1 значение, а несколько
// var arr = [5, 2.2, true, "word"];
// //console.log(arr[0]); // Вывод первого элемента в консоль.
// console.log(arr[arr.length]); //Получить длину массива. То есть количество элементов.

// var arr_mass = [
//     [4,6,8], ["word", "privet", "как дела"], [1.2, 0.1, -10.2]
// ]  //Массив состоящий из 3 массивов внутри массива 

// console.log(arr_mass[1][1])// Вытаскивает данные из 1 массива, 1 элемент подмассива, то есть privet.


//ЦИКЛЫ и ОПЕРАТОРЫ ЦИКЛОВ
//Циклы это специальные конструкции, с помощью которых мы можем выполнять код несколько раз подряд.

// for(var i = 0; i < 10; i++){ // Означает, что мы создали переменную i присвоели ей значение 0. и цикл будет выполняться пока она не станет равна 10 (i < 10;). Каждый цикл она будет увеличивать на 1 (i++). Циклы часто используется для перебора массивов.
//     console.log(i);
// } 


// var isHas = true;
// while(isHas) { // Делает тоже самое, что и for, позволяет выполнить определенный код несколько раз подряд. Различие от for, условия прописываются в (), а создание переменной, также её изменение прпописываются вне самого цикла.
    
// } //будет выполняться, пока значение IsHas true.

// do/while тоже самое, что и while. Разница в том, что цикл 1 раз полюбому сработает, а дальше уже будет проверяться условие (как и в while).
// var x = 100;
// do {
//     console.log(x);
// } while(x < 50);

// for(var i = 10; i <= 20; i++ ){ // Если i меньше или равно 20, то выполнять цикл. Однако если (if) i больше 15 то мы выходим из цикла.
//     if(i>15){
//         break;
//     }
//     console.log(i);
// }

// for(var i = 10; i <= 20; i++ ){  // Если i при делении на 2, остаток будет ноль, то в таком случае этап цикла будет пропускаться и цикл будет начанаться с начала.
//     if(i % 2 == 0){
//         continue;
//     }
//     console.log(i);
// }


// // как с помощью цыкла for перебрать весь массив и вывести его на экран
// var mass = [3, 5, 5, 2, 7, 5, "hai"];
// for(var i = 0; i < mass.length; i++ ){
//     console.log("Элемент" + i + ":" + mass[i]);
// }//mass.length это число элементов массива

//ВСПЛЫВАЮЩИЕ ОКНА В ЯЗЫКЕ JS (это окна которые нельзя стилизовать)
// var data1 = alert("Какая хорошоая погода");// Это окно уведомление. Которое выводится сверх экрана. по типу, что я что то не сохранил на странице.
// var data2 = confirm("Вы сейчас дома?"); // Создает всплывающее окно только уже с 2 кнопками. Это отмена и окей
// console.log(data1);
// console.log(data2); // в консоле выведет либо true либо false.
// if(data2){
//     alert("молодец!!")
// }

// prompt("Текст", 20) // Всплывающее окно в которое пользователь может подставить значение. Текст - вопрос и просьба какая нибудь. 20 значение по умолчанию.

// var person = null;
// if(confirm("Вы точно уверены?")){
//     person = prompt("Введите ваше имя");
//     alert("Привет:" + person);
// } else{
//     alert("Вы ответили нет");
// }


// ФУНКЦИИ В JS


// function info(word){
//     console.log(word + "!");
// }

// function summa(a, b){
//     var res = a + b;
//     info(res);
// }

// summa(1, 2);

// function massiv(arr){ // function вызывает позвожность создания функции. massiv название фунции. arr параметр функции (может быть любой. Его можно назхвать как угодно)
// var sar = 0;

//     for(var i = 0; i<arr.length; i++)
//         sar += arr[i];
// return sar; // Внутри функции мы получили переменую которую мы можем вытащить из функциипомощью return. чтобы получить число нужно написать - massiv(array) (то есть назхвание функции с параметром).
// }



// var array = [2, 5, 67, 0, 0];
// var res = massiv(array);
// console.log(massiv(array));
// console.log(res);

// локальная переменная, которая видна только внутри функции. Глобальная это общая переменная.

// СОБЫТИЯ И ОБРАБОТЧИК СОБЫТИЙ


//var counter = 0;

//function onClickButton(el){
    //counter++;
    //el.innerHTML = "Вы нажали на кнопку: "  + counter; // .innerHTML - Позволяет передать на тег данные полученые с функции.
    //el.style.background = "red"; // style - позволяет менять определенный параметр css.
    //el.style.cssText = "border-radius: 5px; border: 0; font-size: 20px"; // style.cssText опзволяет сделать множество изменений css наведении или нажатии.
//}

//var spans = document.getElementsByTagName ('span');// document - через этот объект можно управлять всей структурой веб сайта. .getElementById Получить элемент по его id
// for(i=0; i < spans.length; i++ ){
 //   console.log(spans[i].innerHTML); // В данном случае позволяет вытянуть значение внутри тега
//
 //}



//  ПРоверка формы и вывод JS вне html
//  document.getElementById('main_form').addEventListener("submit", checkForm);
//  function checkForm (event){
   // event.preventDefault(); // Предотврощает перезагрузку страницы
    // var form = document.getElementById('main_form');

    // var name = form.name.value;
    // var pass = form.pass.value;
    // var repass = form.repass.value;
    // var male = form.state.value;

    // var fail = "";  
      
    // if(!name || !pass || !male){
    //     fail = "Вы не заполнили все поля";
    // }else if(name.length <= 2 || name.length >= 50){
    //     fail = "Введите корректное имя";
    // }else if(pass !== repass){
    //     fail = "Вы не правильно повторили пароль";
    //}else if(pass.split('&').length > 1){ // split позволяет выискивать определенные символы. length говорит их количество
    //     fail = "Некорректный пароль";
    // }
    
    // if(fail){
    //     document.getElementById('error').innerHTML = fail; 
    //     return false;
    // } else {
    //     alert("Все данные корректно заполнены");
    //    window.location = "https://getbootstrap.com/docs/5.3/getting-started/introduction/" // позволяет при заполнении формы переводить на другую страницу
    //    return false; // В случае если нужно перейти на другую странциу пишем false, А если на этой же странице, то True (тогда страница просто обновится)
    //}

//}


// Таймеры и интервалы
//setInterval(my_func, 1000); //Время указывается в милисекундах. setInterval позволяет выполнять определенный код бесконечное количество раз
// var counter = 0;
// function my_func(){
//     counter++
//     console.log(counter);
// }

// var counter = 0; Структура, когда функция сразу внутри интервала
// setInterval(function() {
// counter++;
// console.log(counter);
// }, 1000);

// var di = setInterval(my_func, 1000); //Время указывается в милисекундах. setInterval позволяет выполнять определенный код бесконечное количество раз
// var counter = 0;
// function my_func(){
//     counter++
//     console.log(counter);
//     if(counter == 3){
//         clearInterval(di); // позволяет остановить интервал, в данном случае после 3 повторений отключает.
//     }
// }

// var counter = 0;
// setTimeout(my_func, 2000) // Таймер
// function my_func(){
//         counter++
//         console.log(counter);
// }

// Создание объектов. Встроенные функции.
 
// var date = new Date(); // закидывает объект даты в переменную date.
// console.log(date.getFullYear()); // выводит в консоль сегодняшний год.
// console.log(date.getMonth()); // выводит в консоль сегодняшний год.
// console.log(date.getDate()); // выводит в консоль сегодняшний год.
// console.log(date.getDay()); // выводит в консоль сегодняшний год.
// console.log(date.getHours()); // выводит в консоль сегодняшний год.

// var arr = [2, 4, 5, 6];
// var strike = arr.reverse().join(", "); // запишет массив в строку
// arr.length // выводит количество элементов
// arr.join(", ") // выводит каждый элшемент и разделяет их ", ". Также делает данные из массива строкой.
// arr.sort() // массив будет сортироваться по порядку.
// arr.reverse()// массив будет перевернут местами
// arr.reverse().join(", ")// Так тоже можно прописывать

// strike.split(", ") // делает из строки массив, разбивая по элементам которые указаны в join. получим массив из строк.

// Классы. Объекты. За счет класса можно ввыпонить описание предмета из жизни. Внутрои класса создается различные переменные.

// class person{ // Мы создали класс с 3 параметрами.
//     constructor(name, age, happiness){ // необходимый модуль класса в котором указываются параметры
//       this.name = name;
//       this.age = age;
//       this.happiness = happiness;
//     }
//     info(){ // Внутри класса содается функция info котороая включается при написани тупо alex.info();
//         console.log("Человек" + this.name);
//     }
// }
// var alex = new person('alex', 45, 100); // new выделяет память под класс. person имя класса
// console.log(alex.name); // Выведет имя в консоль

// REACT JS


